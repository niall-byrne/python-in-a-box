---
name: {{cookiecutter.project_slug}}-push-generic
{% raw %}
# Workflow Secrets:
# SLACK_WEBHOOK              (Required, for slack notifications...)

on:
  push:
  schedule:
    - cron: "0 6 * * 1"
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-20.04
    steps:

      - name: Generic Push -- Checkout
        uses: actions/checkout@v1

      - name: Push -- Setup Environment
        run: |
          source .github/scripts/setup.sh
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Push -- Create Docker Mounted Content
        run: |
          echo | ssh-keygen
          touch ${HOME}/.gitconfig
          touch ${HOME}/.gitconfig_global
      - name: Push -- Ensure File System is Writable by the Container
        run: |
          sudo chmod -R o+w .
      - name: Push -- Build Container
        run: |
          docker-compose build
          docker-compose up -d
      - name: Push -- Run TOML Linter
        run: |
          docker-compose exec -T "${PROJECT_NAME}" tomll /app/pyproject.toml
      - name: Push -- Run Linter
        run: |
          docker-compose exec -T "${PROJECT_NAME}" dev lint
      - name: Push -- Run Sec Test
        run: |
          docker-compose exec -T "${PROJECT_NAME}" dev sectest
      - name: Push -- Run Unit Tests
        run: |
          docker-compose exec -T "${PROJECT_NAME}" dev coverage
      - name: Push -- Run Release Validation
        run: |
          docker-compose exec -T "${PROJECT_NAME}" ./scripts/release.sh

      - name: Push -- Documentation Validation
        uses: gaurav-nelson/github-action-markdown-link-check@1.0.11
        with:
          use-quiet-mode: 'no'
          use-verbose-mode: 'yes'
          folder-path: '.github'
          file-path: './README.md'

      - name: Push -- Report Job Status (Success)
        run: |
          ./.github/scripts/notifications.sh "${NOTIFICATION}" "build was successful!"
      - name: Push -- Report Job Status (Failure)
        if: failure()
        run: |
          ./.github/scripts/notifications.sh "${NOTIFICATION}" "build has failed!"

      - name: Push -- Release -- Prepare Content
        if: contains(github.ref, '/tags/v')
        run: |
          echo "{}" > package.json
      - name: Push -- Release -- Generate Changelog
        if: contains(github.ref, '/tags/v')
        uses: scottbrenner/generate-changelog-action@1.0.3
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Push -- Release -- Create Github Release
        if: contains(github.ref, '/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BRANCH_OR_TAG }}
          release_name: Release ${{ env.BRANCH_OR_TAG }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
            ## Deployment Checklist
            - [ ] Ensure documentation is accurate
            - [ ] Ensure readthedocs integration is working
            - [ ] Ensure unnecessary alerts are ignored/disabled
          draft: true
          prerelease: false

      - name: Push -- Release -- Report Success
        if: contains(github.ref, '/tags/v')
        run: |
          ./.github/scripts/notifications.sh "${NOTIFICATION}" "automated release has been created: https://github.com/${USERNAME}/${PROJECT_NAME}/releases"
      - name: Push -- Release -- Report Failure
        if: failure() && contains(github.ref, '/tags/v')
        run: |
          ./.github/scripts/notifications.sh "${NOTIFICATION}" "automated release generation failed!"
{% endraw %}